{"version":3,"sources":["context.js","components/Suggested.js","components/Search.js","components/Choice.js","components/Choices.js","components/Answers.js","components/Start.js","components/NavBar.js","App.js","index.js"],"names":["Context","React","createContext","Provider","state","loading","undefined","results","trackList","lyrics","correct","timeBonus","setTypeText","type","typeSearch","moreDetails","setTypeState","res","track_id","console","log","setState","data","message","body","track_list","apiCall","input","cors","startApi","process","axios","get","then","catch","err","setDataInContext","property","this","value","props","children","Component","Consumer","Suggested","context","useContext","className","onClick","song","track_name","artist_name","album_name","Search","useState","setInput","classN","length","onSubmit","e","preventDefault","onChange","target","id","map","l","i","key","track","Choice","filter","t","Choices","Answers","piece","setPiece","useEffect","text","answer","lyrics_body","split","randomStart","Math","floor","random","start","finish","slice","possible","alert","Start","game","setGame","setType","possibleSongs","setPossibleSongs","setAnswer","typeOfQuestion","randomIndexOfArr","arr","types","selectPossibleSongs","pool","atMostFive","finalSelection","push","splice","findAnswerLyrics","foundAnswer","NavBar","startButton","to","bigText","starterPageText","displayStarterPageText","displayStartButton","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bfffc32.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport const Context = React.createContext();\n\nexport class Provider extends Component {\n    state = {\n        loading: undefined,\n        results: [],\n        trackList: [],\n        lyrics: [],\n        correct: 0,\n        timeBonus: 0\n    }\n    /* DOCS: https://developer.musixmatch.com/documentation/api-reference/track-chart-get */\n    /* track.lyrics.get?track_id= ...trackList[0].track_id...  &apikey= */\n    /* track.search?q_track= ...user input... &page_size=10&page=1&s_track_rating=desc */\n    /* OTHER SEARCH OPTIONS: q_artist, q_lyrics */\n    setTypeText = type => {\n        let typeSearch, moreDetails;\n        if (type === 'results') {\n            typeSearch = 'track.search?q_track='\n            moreDetails = '&page_size=10&page=1&s_track_rating=desc&apikey='\n        } else { \n            typeSearch = 'track.lyrics.get?track_id='\n            moreDetails = '&apikey='\n        }\n        return {typeSearch, moreDetails}\n    }\n\n    setTypeState = (type, res, track_id) => {\n        console.log('setTypeState', type)\n        if (type === 'results') this.setState({results: res.data.message.body.track_list, loading: false})\n        else this.setState({lyrics: [...this.state.lyrics, {...res.data.message.body.lyrics, track_id}], loading: false })\n        console.log(this.state)\n    }\n\n    apiCall = ({type, input}) => {\n        let cors = 'https://cors-anywhere.herokuapp.com/'\n        let startApi = 'https://api.musixmatch.com/ws/1.1/'\n        let { typeSearch, moreDetails } = this.setTypeText(type)\n        console.log('apiCall')\n        this.setState({loading: true})\n        console.log(cors + startApi + typeSearch + input + moreDetails + process.env.REACT_APP_KEY)\n        axios\n            .get(cors + startApi + typeSearch + input + moreDetails + process.env.REACT_APP_KEY)\n            .then(res => this.setTypeState(type, res, input))\n            .catch(err => console.log(err))\n    }\n\n    setDataInContext = (property, data) => this.setState({ [property]: data })\n\n    render() {\n        let { state, apiCall, setDataInContext } = this\n        return(\n            <Context.Provider value={{state, apiCall, setDataInContext}}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { useContext } from 'react';\nimport { Context } from '../context';\n\nfunction Suggested(props) {\n    const context = useContext(Context)\n\n    const handleClick = () => context.setDataInContext('trackList', [...context.state.trackList, props.song])\n\n    return(\n        <div className='suggested' onClick={handleClick}>\n            <div>\n                <p>{props.song.track_name}</p>\n            </div>\n            <div>\n                <p>{props.song.artist_name}</p>\n            </div>\n            <div>\n                <p>{props.song.album_name}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Suggested;","import React, { useState, useContext } from 'react';\nimport { Context } from '../context';\n\nimport Suggested from './Suggested'\n\nfunction Search() {\n  let [input, setInput] = useState('')\n  const context = useContext(Context)\n  let { results, loading } = context.state\n  \n  const onChange = (e) => {\n    if (loading === false) context.setDataInContext('results', [])\n    setInput(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    context.apiCall({type: 'results', input})\n  }\n\n  let classN = results.length || loading ? 'submit-form-button-results' : 'submit-form-button'\n\n  return (\n      <form onSubmit={onSubmit} className={classN}>\n        <input value={input} onChange={onChange}></input>\n        <button>SUBMIT</button> <br/><br/>\n        {loading ? 'Loading...' : ''}\n        {results.length ? <div id='header'><h6>TITLE</h6><h6>ARTIST</h6><h6>ALBUM</h6></div> : ''}\n        {results.length ? results.map((l,i) => <Suggested key={i} song={l.track}/>) : ''}\n      </form>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from 'react';\nimport { Context } from '../context';\n\nfunction Choice(props) {\n    const context = useContext(Context)\n\n    const handleClick = () => context.setDataInContext('trackList', [...context.state.trackList].filter(t => t.track_id !== props.song.track_id)) \n\n    return(\n        <div className='choice'>\n            <div>\n                <p>{props.song.track_name}</p>\n            </div>\n            <div>\n                <p>{props.song.artist_name}</p>\n            </div>\n            <div>\n                <p>{props.song.album_name}</p>\n            </div>\n            <div className='undo-choice' onClick={handleClick}>X</div>\n        </div>\n    )\n}\n\nexport default Choice;","import React, { useContext } from 'react';\nimport { Context } from '../context';\n\nimport Choice from './Choice'\n\nfunction Choices() {\n    const context = useContext(Context)\n\n    const handleClick = input => context.apiCall({type: 'lyrics', input})\n\n    return(\n        <ul>\n            {console.log(context.state.trackList)}\n            {context.state.trackList.map((t,i) => <Choice key={i} song={t} onClick={() => handleClick(t.track_id)}/>)}\n        </ul>\n    )\n}\n\nexport default Choices;","import React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context';\n\nfunction Answers(props) {\n    let [piece, setPiece] = useState('')\n    const context = useContext(Context)\n    const random = text => Math.floor(Math.random() * text.length)\n\n    const handleClick = id => {\n        let correct = id === props.answer[0].track_id\n        if (correct) {\n            context.setDataInContext('correct', context.state.correct + 1)\n            alert('correct')\n        } else {\n\n        }\n        console.log(context)\n    }\n\n    useEffect(() => {\n        let answer = props.answer[0].lyrics_body.split('...')[0]\n        let randomStart = random(answer)\n        let start = randomStart < answer.length - 30 ? randomStart : answer.length - 30\n        let finish = start + 30\n        setPiece(answer.slice(start, finish))\n        console.log(piece)\n    }, [])\n\n    return (\n        <div id='answers'>\n            <ul>\n                {props.possible.map((t,i) => <li key={i} className='pick' onClick={() => handleClick(t[0].track_id)}>{t[0].track_name} - <i>{t[0].artist_name}</i></li>)}\n            </ul>\n            <div id='answer-piece'>\n                ... {piece} ...\n            </div>\n        </div>\n    )\n}\n\nexport default Answers;","import React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context';\n\nimport Answers from './Answers';\n\nfunction Start() {\n    const context = useContext(Context)\n    let [game, setGame] = useState(false)\n    let [type, setType] = useState('')\n    let [possibleSongs, setPossibleSongs] = useState([])\n    let [answer, setAnswer] = useState([])\n    \n    useEffect(() => {\n        for (let song of context.state.trackList) {\n            let input = song.track_id\n            context.apiCall({type: 'lyrics', input})\n        }\n    }, []) \n\n    useEffect(() => {\n        let { trackList, lyrics } = context.state\n        if (trackList.length === lyrics.length) {\n            setGame(true)\n            typeOfQuestion()\n        }\n    }, [context.state.lyrics])\n\n    const randomIndexOfArr = arr => Math.floor(Math.random() * arr.length)\n\n    const typeOfQuestion = () => {\n        let types = ['lyric-piece']\n        setType(types[randomIndexOfArr(types)])\n        selectPossibleSongs()\n    }\n\n    const selectPossibleSongs = () => {\n        let { trackList, lyrics } = context.state\n        let pool = [...trackList]\n        let atMostFive = lyrics.length >= 5 ? 5 : lyrics.length\n        let finalSelection = []\n        while (atMostFive) {\n            finalSelection.push(pool.splice(randomIndexOfArr(pool),1))\n            atMostFive--\n        }\n        let findAnswerLyrics = finalSelection.length && finalSelection[randomIndexOfArr(finalSelection)][0]['track_id']\n        console.log(findAnswerLyrics)\n        let foundAnswer = lyrics.filter(t => t.track_id === findAnswerLyrics)\n        setPossibleSongs(finalSelection)\n        setAnswer(foundAnswer)\n        console.log(foundAnswer)\n    }\n\n    return(\n        <div>\n            {game ? 'Quiz' : 'Loading...'}\n            {answer.length ? <Answers possible={possibleSongs} answer={answer}/> : ''}\n        </div>\n    )\n}\n\nexport default Start;","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { Context } from '../context';\n\nimport Search from './Search';\nimport Choices from './Choices';\nimport Start from './Start';\n\nconst NavBar = () => {\n    const context = useContext(Context)\n    let startButton = context.state.trackList.length >= 3 ? <Link to='/start'>Start</Link> : `${context.state.trackList.length}/3`\n    let results = context.state.results.length || context.state.loading ? true : false\n    let bigText = results ? <Link to='/'>Lyrical Guru</Link> : <div className='default-page'>Lyrical Guru</div>\n\n    let starterPageText = (\n        <p className='starter-text'>\n            Try your best to identify lyrics from your favorite songs... or test your friends! \n            \n            <br/>Choose at least three songs, but preferably five.\n            <br/><br/>Hopefully you listen to music!\n            <br/><br/><Link to='/choices'>Choices</Link> {startButton}\n        </p>\n    )\n\n    let displayStarterPageText = results ? <Link to='/choices'>Choices</Link> : starterPageText\n    let displayStartButton = results ? startButton : ''\n    let classN = results ? 'normal-nav' : null;\n\n    return (\n        <Router>\n            <div className={classN}>  \n            {bigText}\n            {displayStarterPageText}\n            {displayStartButton}\n            </div>  \n            <Switch>\n                <Route exact path='/' component={Search} />\n                <Route path='/choices' component={Choices} />\n                <Route path='/start' component={Start} />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default NavBar;\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from './context';\n\nimport NavBar from './components/NavBar'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider>\n        <NavBar/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}